<%# Define shows as per selection on search forms.  %>
<% @shows = Show.all %>
<% @shows = @shows.where(genre: params[:category]) if params[:category].present? %>
<% @shows = @shows.joins(:userreviews).where("userreviews.rating >= ?", params[:userrating].to_i.round(1)) if params[:userrating].present? %>
<% @shows = @shows.where("title LIKE ?", "%#{params[:showname]}%") if params[:showname].present? %>
<% @shows = @shows.where("performer LIKE ?", "%#{params[:performer]}%") if params[:performer].present? %>
<% @shows = @shows.distinct %>
<% div_array = [] %>
<% if @shows %>
  <% @shows.each do |show| %>
    <% div_array << content_tag(:div, class: 'index') do %>
      <% if show.present? && show.imageup.attached? %>
        <img class="show-image" style="width: 300px; height: 175px;" src="<%= url_for(show.imageup) %>">
      <% end %>
      <br />
      <span class="index-show-title"><%= show.title %></span>
      <br />
      <% @showid = show.id %>
      <% @ratingsum = 0 %>
      <% @count = 0 %>
      <% @userreviews = Userreview.where(show_id: show.id) %>
      <% @userreviews.each do |userreview| %>
        <% if userreview.rating.is_a?(Numeric) %>
          <% @ratingsum += userreview.rating %>
          <% @count += 1 %>
        <% end %>
      <% end %>
      <% if @count != 0 %>
        <%= number_with_precision(@ratingsum.to_f / @count, precision: 1) %>&nbsp;&nbsp;&nbsp;<%= @count %>&nbsp;<span class="index-item">Review/s</span>
      <% else %>
        Not yet rated
      <% end %>
      <% @ratingsum = 0 %>
      <% @count = 0 %>
      <br />
      <span class="index-item">Performed by: <%= show.performer %></span>
      <br />
      <span class="genre"><%= show.genre %></span>
      <br /><br />
      <%= button_to "Check it Out", show_path(show), method: :get, class: "view-show" %>
      &nbsp;&nbsp;
    <% end %>
  <% end %>
<% end %>
<% div_array = div_array.shuffle.sort_by do |div| %>
  <% show = div.instance_variable_get(:@object) %>
  <% if show %>
    <% average_rating = -(show.userreviews.average(:rating) || 0) %>
    <% review_count = -show.userreviews.count %>
  #Here the range of random factor can be adjusted.
    <% random_factor = rand(3) + 1 %> 
    <% rating_factor = average_rating * random_factor %>
    # Relates to the increase of the rating factor for unrated shows
    <% rating_factor += 10 if average_rating.zero? %>    
    [rating_factor, review_count * random_factor]
  <% end %>
<% end %>
<div class="index-container-outer">
  <%= div_array.join.html_safe %>
</div>
<br />
<br />
<br />
<br />
